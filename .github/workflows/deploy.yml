name: container based deployment

on:
  push:
    branches:
      - main

jobs:
  Container-based-Deployment-Job:
    runs-on: ubuntu-latest

    steps:
      - name: github repository source pull
        uses: actions/checkout@v4

      - name: jdk 17 install
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: applicaton.yml 생성
        run: echo ${{secrets.APPLICATION2_YML}} | base64 --decode > ./src/main/resources/application.yml

      - name: test and build
        run: |
          chmod +x ./gradlew
          ./gradlew clean build --warning-mode all

      - name: aws ECR access credential setting
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_PASSWORD }}

      - name: aws ECR login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: docker image create
        run: |
          docker build -t web-server
          docker tag web-server ${{steps.login-ecr.outputs.registry}}/web-server:latest

      - name: docker image push to ecr
        run: docker push ${{steps.login-ecr.outputs.registry}}/web-server:latest

      - name: SSH로 ec2 access(image pull from ECR, and container execute)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: ${{secrets.EC2_PORT}}
          script_stop: ture
          script: |
            docker stop web-server || ture
            docker rm web-server || true
            docker pull ${{steps.login-ecr.outputs.registry}}/web-server:latest
            docker run -d --name web-server -p 8080:8080 ${{steps.login-ecr.outputs.registry}}/web-server:latest
